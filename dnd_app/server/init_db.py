#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–æ–≤
"""

import os
import sys
import json
from app import app, db, Spell, Feat

def load_spells():
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    try:
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É spells.json
        spells_file = os.path.join(os.path.dirname(__file__), '..', 'dnd_app', 'spells.json')
        
        if not os.path.exists(spells_file):
            print(f"‚ùå –§–∞–π–ª {spells_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        with open(spells_file, 'r', encoding='utf-8') as f:
            spells_data = json.load(f)
        
        print(f"üìñ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(spells_data)} –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π –∏–∑ JSON —Ñ–∞–π–ª–∞")
        
        added_count = 0
        for spell_data in spells_data:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ
            existing = Spell.query.filter_by(name=spell_data['name']).first()
            if not existing:
                spell = Spell(
                    name=spell_data['name'],
                    level=spell_data['level'],
                    school=spell_data['school'],
                    classes=json.dumps(spell_data['classes']),
                    action_type=spell_data.get('actionType'),
                    concentration=spell_data.get('concentration', False),
                    ritual=spell_data.get('ritual', False),
                    casting_time=spell_data.get('castingTime'),
                    range_distance=spell_data.get('range'),
                    components=json.dumps(spell_data.get('components')) if spell_data.get('components') else None,
                    duration=spell_data.get('duration'),
                    description=spell_data['description'],
                    material=spell_data.get('material'),
                    cantrip_upgrade=spell_data.get('cantripUpgrade')
                )
                db.session.add(spell)
                added_count += 1
        
        db.session.commit()
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} –Ω–æ–≤—ã—Ö –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π: {e}")
        return False

def load_feats():
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å —É–º–µ–Ω–∏—è –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    try:
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É feats.json
        feats_file = os.path.join(os.path.dirname(__file__), '..', 'dnd_app', 'feats.json')
        
        if not os.path.exists(feats_file):
            print(f"‚ùå –§–∞–π–ª {feats_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        with open(feats_file, 'r', encoding='utf-8') as f:
            feats_data = json.load(f)
        
        print(f"üìñ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(feats_data)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É–º–µ–Ω–∏–π –∏–∑ JSON —Ñ–∞–π–ª–∞")
        
        added_count = 0
        for category, feats_list in feats_data.items():
            for feat_data in feats_list:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —É–º–µ–Ω–∏–µ
                existing = Feat.query.filter_by(name=feat_data['–Ω–∞–∑–≤–∞–Ω–∏–µ']).first()
                if not existing:
                    feat = Feat(
                        name=feat_data['–Ω–∞–∑–≤–∞–Ω–∏–µ'],
                        description=feat_data['–æ–ø–∏—Å–∞–Ω–∏–µ'],
                        category=category
                    )
                    db.session.add(feat)
                    added_count += 1
        
        db.session.commit()
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} –Ω–æ–≤—ã—Ö —É–º–µ–Ω–∏–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É–º–µ–Ω–∏–π: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö D&D –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        db.create_all()
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        print("\nüìö –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–æ–≤...")
        
        spells_success = load_spells()
        feats_success = load_feats()
        
        if spells_success and feats_success:
            print("\nüéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            spell_count = Spell.query.count()
            feat_count = Feat.query.count()
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
            print(f"   - –ó–∞–∫–ª–∏–Ω–∞–Ω–∏–π: {spell_count}")
            print(f"   - –£–º–µ–Ω–∏–π: {feat_count}")
        else:
            print("\n‚ö†Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏")
            sys.exit(1)

if __name__ == '__main__':
    main()
